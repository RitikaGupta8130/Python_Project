# floyds_algorithm/floyds_recursive.py

def floyds_recursive(graph, n):
    """
    Find the shortest paths between all pairs of vertices using Floyd's algorithm (recursive version).
    
    Args:
    graph (list of lists): Adjacency matrix representing the graph.
    n (int): Number of vertices in the graph.

    Returns:
    list of lists: Matrix containing shortest distances between all pairs of vertices.
    """
    if n == 0:
        return graph

    for i in range(n):
        for j in range(n):
            for k in range(n):
                if graph[i][j] > graph[i][k] + graph[k][j]:
                    graph[i][j] = graph[i][k] + graph[k][j]

    return floyds_recursive(graph, n - 1)
